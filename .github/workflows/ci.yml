name: ci

on:
  push:
  pull_request:

env:
  POETRY_HOME: /opt/poetry
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  main_ci:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install poetry
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install poetry
      - name: Fix github path
        run: |
          echo "$POETRY_HOME/bin" >> "$GITHUB_PATH"
      - name: Install requirements
        run: |
          poetry install
      - name: Run lint
        run: |
          make lint
      - name: Checking for dirty files
        run: |
          make no-dirty
      - name: Cleaning
        run: |
          make clean
      - name: Checking for dirty files (again)
        run: |
          make no-dirty
      - name: Login to GitHub Container Registry
        if: "${{ github.event_name == 'push' }}"
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # tag: v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        if: "${{ github.event_name == 'push' }}"
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push dev/run image
        if: "${{ github.event_name == 'push' }}"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}