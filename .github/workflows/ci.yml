name: ci

on:
  push:
    branches:
      - main
  pull_request:

env:
  POETRY_HOME: /opt/poetry
  REGISTRY: docker.io
  IMAGE_NAME: fabienmarty/smartjob-trigger-service

jobs:

  main_ci:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install poetry
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install poetry
      - name: Fix github path
        run: |
          echo "$POETRY_HOME/bin" >> "$GITHUB_PATH"
      - name: Install requirements
        run: |
          poetry install
      - name: Run lint
        run: |
          make lint
      - name: Checking for dirty files
        run: |
          make no-dirty
      - name: Cleaning
        run: |
          make clean
      - name: Checking for dirty files (again)
        run: |
          make no-dirty
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

      - name: Build image (PR only)
        if: "${{ github.event_name == 'pull_request' }}"
        uses: docker/build-push-action@v5
        with:
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Login to Docker Hub Registry
        if: "${{ github.event_name == 'push' }}"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push image
        if: "${{ github.event_name == 'push' }}"
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
